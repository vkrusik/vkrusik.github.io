{"version":3,"sources":["App.js","sw.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activeStory","answer","top_list","joke","onStoryChange","bind","assertThisInitialized","handleChangeAnswer","handleChangeAnswerButton","closePopout","setState","popout","event","fio","target","value","self","fetch","Hash","then","response","json","data","react_default","a","createElement","vkui","actions","title","autoclose","onClose","answer_full","Score","Question","question","hash","e","currentTarget","dataset","story","window","scroll","gettop","clearInterval","interval","datain","action","vkid","FormData","append","JSON","stringify","method","body","status","console","log","top","vk","success","document","getElementById","focus","toplist_array","Array","from","tabbar","className","onClick","selected","data-story","text","home_default","play_default","poll_default","id","activePanel","size","level","length","map","i","before","_28_user_default","indicator","type","TOP","fname","lname","align","placeholder","name","onChange","onFocus","Scrol","React","Component","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","isLocalhost","Boolean","location","hostname","match","connect","send","URL","process","origin","addEventListener","concat","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.30b6b065.chunk.js","sourcesContent":["import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { Counter, InfoRow, Cell, List, Alert, Tabbar, TabbarItem,Epic, Input, Panel, ListItem, Button, Group, Div, Avatar, PanelHeader, View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Icon24Home from '@vkontakte/icons/dist/24/home';\nimport Persik from './panels/Persik.css';\nimport Icon24Poll from '@vkontakte/icons/dist/24/poll';\nimport Icon24User from '@vkontakte/icons/dist/24/user';\nimport Icon28User from '@vkontakte/icons/dist/28/user';\nimport Icon24Play from '@vkontakte/icons/dist/24/play';\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactiveStory: 'main',\n\t\t\tanswer: '',\n\t\t\ttop_list: \"\",\n\t\t\tjoke: \"\"\n\t\t};\n\t\tthis.onStoryChange = this.onStoryChange.bind(this);\n\t\t this.handleChangeAnswer = this.handleChangeAnswer.bind(this);\n\t\t this.handleChangeAnswerButton = this.handleChangeAnswerButton.bind(this);\n\t\t\tthis.closePopout = this.closePopout.bind(this);\n\t\t \n\t}\nclosePopout () {\n      this.setState({ popout: null });\n    }\nhandleChangeAnswer(event)\n{\n    \t\tvar fio = event.target.value;\n    \t\tthis.setState({ answer: fio });\n}\n\nhandleChangeAnswerButton(event)\n{\n\t\t\tconst self= this;\n    \t\tvar fio = event.target.value;\n    \t\tthis.setState({ answer: '' });\n    \n    \t\tfetch('https://zakupi.club/telegram_bot/bot_rusik/question.check/index.php?hash='+this.state.Hash+'&answer='+this.state.answer)\n        \n\t\t.then(response => response.json())\n    .then(function(data) {\n    if(data==\"OK\"){\n\tself.setState({ popout:\n                  <Alert\n                    actions={[{\n                      title: 'OK',\n                      autoclose: true,\n                    }]}\n                    onClose={self.closePopout}\n                  >\n                    { <h2>Круто, Вы правы!</h2>   }\n                    { data.answer_full }\n\n                  </Alert>\n                }); \n    }\n    else{\n\t\t    \tself.setState({ popout:\n                  <Alert\n                    actions={[{\n                      title: 'OK',\n                      autoclose: true,\n                    }]}\n                    onClose={self.closePopout}\n                  >\n                    <h2>Неправильно! Правильный ответ : {data}</h2>\n                    { data.answer_full }\n\n                  </Alert>\n                }); \n    }\n      }\n     );\n     fetch('https://zakupi.club/telegram_bot/bot_rusik/score.get/index.php')\n    \t.then(response => response.json())\n\n    .then(function(data) {\n      \n    self.setState({Score: data})\n\t\t\n      }\n     );\n    \t\t//https://namius.ru/api/question.check/index.php?hash=a6da49a35fc40288fec2d3ae0d52a2a8a0610d2898c668a5dd6082643fe837038e81663a3034d60f843f60d4516acf1defa2bf8378af87c34afd3871249f86e4&answer=и\n    \t\t//if(this.state.answer==this.state.ans1 || this.state.answer==this.state.ans2 || this.state.answer==this.state.ans3){\n\t\t\t//alert(\"GOOD JOB\")    \t\t\n    \t\t//}\n    \t\t//else{\n    \t\t//\talert(\"BAD JOB\")    \n    \t\t//}\n    \t\t\nfetch('https://zakupi.club/telegram_bot/bot_rusik/question.get/index.php')\n        .then(response => response.json())\n\n    .then(function(data) {\n      \n    self.setState({Question: data.question})\n\t\t self.setState({Hash: data.hash})\n      }\n     );\n    \t\n\n      \n }\n \n\n\n\n\n    \t  onStoryChange (e) {\n\t    const self = this;\n        if (e.currentTarget.dataset.story===\"top\")\n        {\n        \twindow.scroll(0,0);\n          self.gettop();\n\t\t}\n    this.setState({ activeStory: e.currentTarget.dataset.story })\n    \n  }\n  componentWillUnmount() {\n   clearInterval(this.interval);\n }\n \t\n \tgettop()\n    {\n\n    const self = this;\n    var datain = {\n        action: \"get_top\",\n        vkid: this.state.vkid,\n\n    };\n    \n    //console.log(\"toplist_array1\",toplist_array);\n\n    var data = new FormData();\n    data.append( \"json\", JSON.stringify( datain ) )\n\n\n    fetch('https://zakupi.club/telegram_bot/bot_rusik/question.check/index.php?action=get_top',{\n          method: 'POST',\n          body: data\n        })\n      .then(\n        function(response) {\n          if (response.status !== 200) {\n            //console.log('response N: ', response);\n            return;\n          }\n\n          // Examine the text in the response\n          response.json().then(function(data) {\n            console.log(\"toplist_array_aj\",data.top.vk);\n\n\n        //console.log(\"response Y\",data.answers[0].var1);\n\n        if (data.success==\"Y\")\n        {\n              //self.setState({ answers: data.answers });\n              self.setState({top_list: data.top.vk});\n\n        } else\n        {\n\n\n        }\n\n          });\n        }\n      );\n\n    }\n \n   getJoke() {\n   \tconst self = this;\n  fetch('https://zakupi.club/telegram_bot/bot_rusik/score.get/index.php')\n    \t.then(response => response.json())\n\n    .then(function(data) {\n      \n    self.setState({Score: data})\n\t\t\n      }\n     );\n  }\n\tScrol(){\n\tdocument.getElementById(\"answer\").focus();\n\t}\n\tcomponentDidMount() {\n\t\t\n\t\tconst self=this;\n\n\t/*\tthis.getJoke();\n    this.interval = setInterval(() => {\n      this.getJoke();\n    }, 3000);\n\n*/\nfetch('https://zakupi.club/telegram_bot/bot_rusik/question.get/index.php')\n        .then(response => response.json())\n\n    .then(function(data) {\n      \n    self.setState({Question: data.question})\n    self.setState({Hash: data.hash})\n      }\n     );\n     \tfetch('https://zakupi.club/telegram_bot/bot_rusik/score.get/index.php')\n    \t.then(response => response.json())\n\n    .then(function(data) {\n      \n    self.setState({Score: data})\n\t\t\n      }\n     );\n  }\n\trender() {\n\t\tconst toplist_array = Array.from(this.state.top_list);\n\t\treturn (\n\t\t\n\t\t\t<Epic activeStory={this.state.activeStory} tabbar={\n        <Div className=\"Persik\"><Tabbar>\n        \t\t <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'main'}\n            data-story=\"main\"\n            text=\"Главная\"\n          ><Icon24Home  /></TabbarItem>\n           \n\t\t\t\t  <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'game'}\n            data-story=\"game\"\n            text=\"Игра\"\n          ><Icon24Play /></TabbarItem>  \n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'top'}\n            data-story=\"top\"\n            text=\"Топ\"\n          ><Icon24Poll  /></TabbarItem>        \n         \n        </Tabbar></Div>\n      }>\n      <View id=\"main\" activePanel=\"main\" >\n        <Panel id=\"main\">\n\n        <Group title=\"\">\n          <Div>\n         <PanelHeader>Главная</PanelHeader>\n            <b>Русик - развивающий сервис</b>\n\n          </Div>\n        </Group>\n        <Group title=\"Миссия сервиса\">\n              <Div>\n                <InfoRow title=\"\">\n            Игровой сервис \"Русик\" - это превосходная возможность изучить как правильно пишуться слова.\n            Наш сервис направлен на повышение общей эрудиции людей в легкой игровой форме.\n            Если у вас есть свободная минута времени, вы можете потрать её с пользой для себя.\n\n                </InfoRow>\n              </Div>\n        </Group>\n\n        <Group title=\"Правила игры:\">\n              <Div>\n                <InfoRow title=\"\">\n               Сервис вам покажет слово со зведочкой внутри. Вам надо будет написать что должно стоять на месте звёздочки.\n               Если ваш ответ оказался правильным, вам начислят 20 баллов иначе сервис покажет как правильно писать это слово.\n                </InfoRow>\n              </Div>\n        </Group>\n\n        <Group >\n              <Div>\n\n          <Button size=\"xl\" level=\"2\"  onClick={ this.onStoryChange } selected={this.state.activeStory === 'game'} data-story=\"game\" >\n                    Погнали играть!\n                </Button>\n\n                </Div>\n        </Group>\n\n\n\n\n\n\n            </Panel>\n\n      </View>\n        <View id=\"top\" activePanel=\"top\" popout={this.state.popout}>\n        <Panel id=\"top\">\n         <PanelHeader>ТОП</PanelHeader>\n        <Group title=\"Рейтинг игроков\">\n          { //console.log(\"toplist_array\",toplist_array) \n          }\n          { //console.log(\"toplist\",this.state.top_list) \n          }\n\n        {toplist_array.length > 0 &&\n          <List>\n\n\n          {toplist_array.map((value, i) => {return ( <Cell before={<Avatar><Icon28User /></Avatar>} indicator={<Counter type=\"primary\">{value.TOP}</Counter>}> {value.fname} {value.lname} </Cell>  ) } )\n          }\n\n          </List>\n        }\n\n            </Group>\n\n\n            </Panel>\n\n      </View>\n        <View id=\"profile\" activePanel=\"profile\">\n          <Panel id=\"profile\">\n            <PanelHeader>Профиль</PanelHeader>\n          </Panel>\n        </View>\n        <View   id=\"game\" activePanel=\"game\" popout={this.state.popout}>\n          <Panel  id=\"game\">\n          <PanelHeader>Главная</PanelHeader>\n            <Group >\n         \t<Div className=\"app\">\n         \t<Div align=\"center\" className=\"title2\"><br/><a>Ваш счёт<br/>{this.state.Score}</a></Div>\n\t\t\t\t\n\t\t\t <Div className=\"title\" align=\"center\"><h2>{this.state.Question}<br/></h2>\n\t\t\t </Div>\n\t\t\t <Div\t>\n\t\t\t \n\t\t\t\n\t\t<Input  type=\"text\" placeholder=\"Введите ответ\"\n                  id=\"answer\"\n                  name=\"answer\"\n                  value={this.state.answer}\n                  onChange={this.handleChangeAnswer}\n                  onFocus={this.Scrol}\n                  /><br/></Div>\n                  <Button onClick={this.handleChangeAnswerButton} size=\"xl\" >Отправить</Button>\n                  \n                  </Div>\n                   <br/><br/><br/><br/><br/><br/>\n                  \n\t\t\t</Group>\n          </Panel>\n        </View>\n      </Epic>\t\t\t\n\n\n\t\t);\n\t}\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport registerServiceWorker from './sw';\n\n// Init VK App\\\n\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \nregisterServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}